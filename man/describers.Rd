% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/describers.R
\name{describers}
\alias{describers}
\alias{meansd}
\alias{nprops}
\alias{crosstab}
\alias{groupMeans}
\alias{describe}
\title{A collection of functions to summarize vectors in matrix format}
\usage{
meansd(numvar, na.rm = TRUE, varname = NULL, digits = 2)

nprops(catvar, digits = 1)

crosstab(var1, var2, digits = 2)

groupMeans(numvar, catvar, digits = 2)

describe(..., outcome, data, headerRow = NULL, headerFrame = NULL,
  includeHeader = TRUE, deparse.level = 2, digits = 2)
}
\arguments{
\item{numvar}{A numeric vector}

\item{na.rm}{(default TRUE) whether to remove NA values when summarizing
numeric values}

\item{varname}{An optional character string for the name of the vector
(defaults to object name)}

\item{digits}{The number of significant digits to show}

\item{catvar}{A factor vector (categorical)}

\item{var1}{A character or numeric vector}

\item{var2}{A second categorical variable for crosstabulation}

\item{...}{Variables to describe by the outcome, can be verctors or
unquoted names when the data argument is supplied}

\item{outcome}{The comparison variable, divides the data into categories}

\item{data}{A data.frame containing the comparison variables}

\item{headerRow}{A character vector for each variable in \ldots that serves
as the descriptive name in the table}

\item{headerFrame}{A data.frame that relates or maps each variable name
to its respective descriptive name}

\item{includeHeader}{logical (default TRUE) indicating whether or not
to add a header row to the table with group counts for the outcome variable}

\item{deparse.level}{controls how the default dnn is constructed. See 'table'.}
}
\description{
These functions work on character, numeric, or factor
vectors. They are meant to make outputs easier to paste into table.
}
\examples{

data(mtcars)

meansd(mtcars$mpg)
nprops(mtcars$gear)

with(mtcars, groupMeans(mpg, am))

am <- plyr::mapvalues(mtcars$am, c(0, 1), c("Auto", "Manual"))
mtcars$vs1 <- plyr::mapvalues(mtcars$vs, c(0, 1), c("V Engine", "Straight"))

groupMeans(mtcars$mpg, am)

crosstab(mtcars$vs1, am)

mtcars$cyl <- factor(mtcars$cyl)
describe(mpg, cyl, disp, outcome = am, data = mtcars)

}
